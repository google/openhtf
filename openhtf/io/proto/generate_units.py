"""Generates util/units.py from units.proto!

To ensure building the protos isn't required for normal usage of OpenHTF, we
need a pure-python version of the information here that can be mapped back when
this proto is used.
"""
import io
import sys

from openhtf.io.proto import units_pb2

HEADER = '''# coding: iso-8859-1

# Copyright 2015 Google Inc. All Rights Reserved.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


"""Units of measure for OpenHTF.

Used to retrieve ANSI UOM codes/suffixes as follows:

from openhtf.utils.units import UOM

UOM['BYTE'].uom_code        # 'AD'
UOM['MILLIAMP'].uom_suffix  # 'mA'
"""
import collections

Unit = collections.namedtuple('Unit', 'uom_code uom_suffix')

UOM = {}

# WARNING: DO NOT MODIFY! Auto-generated by openhtf/io/proto/generate_units.py
'''


def string_or_none(obj):
  if obj is None:
    return 'None'
  return "'%s'" % obj


def unit_constructor(unit):
  exts = unit.GetOptions().Extensions
  return 'Unit(%s, %s)' % (
      string_or_none(exts[units_pb2.uom_code]),
      string_or_none(exts[units_pb2.uom_suffix]))


def main():
  with io.open(sys.argv[1], 'wb') as output:
    output.write(HEADER)
    for unit in units_pb2.Units.UnitCode.DESCRIPTOR.values:
      line = "UOM['%s'] = %s\n" % (unit.name, unit_constructor(unit))
      output.write(line.encode('utf8'))


if __name__ == '__main__':
  main()
